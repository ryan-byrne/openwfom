{"version":3,"sources":["tabs/File/Main.js","tabs/Cameras/Edit.js","tabs/Cameras/Configure.js","tabs/Cameras/Main.js","tabs/Arduino/Configuration.js","tabs/Arduino/Main.js","App.js","index.js"],"names":["File","props","useState","fileConfig","setFileConfig","handleChange","event","target","id","value","useEffect","fetch","then","resp","ok","json","console","error","data","Container","Form","Group","as","Row","className","map","idx","pl","lbl","Col","sm","md","Control","placeholder","onChange","Text","muted","charAt","toUpperCase","slice","xs","type","min","step","run_length","run_length_unit","custom","dur","number_of_runs","Alert","variant","directory","ButtonGroup","Button","onClick","method","log","DropdownButton","title","Dropdown","Item","eventKey","EditCameras","foundCameras","setFoundCameras","isSearching","setSearching","searchCameras","filteredCameras","Object","values","cameras","cam","addCamera","textContent","disabled","length","result","characters","charactersLength","i","Math","floor","random","generateId","headers","body","JSON","stringify","message","oldCameras","splice","setCameras","removeCamera","config","newCameras","catch","err","cameraTable","text","Table","func","c","interface","index","every","v","e","Modal","show","onHide","hideEditing","Header","closeButton","Title","Body","Spinner","animation","size","ImageDraw","draw","x","y","ix","iy","coor","setCoor","height","width","objectFit","cropper","setCropper","canvasRef","useRef","imageRef","canvas","current","ctx","getContext","clearRect","strokeStyle","strokeRect","naturalHeight","camera","aoi","onMouseDown","getBoundingClientRect","left","top","clientX","clientY","onMouseMove","onMouseUp","scale","fullHeight","fullWidth","button","abs","parseInt","setCamera","ref","onContextMenu","preventDefault","style","Image","src","fluid","draggable","ConfigureCamera","binning","handleSwitch","primary","checked","newX","newY","centered","handleSelect","dtype","handleNumber","selected","Tabs","Tab","InputGroup","FormControl","bin","Check","label","setting","framerate","bit","Prepend","Footer","Cameras","editing","showEditing","selectedCamera","setSelectedCamera","keys","key","cursor","alt","StrobingTab","handleLed","leds","setConfig","max","trigger","led","name","pin","newLeds","removeLed","StimTab","newStim","stim","pins","substring","stepSize","s","Array","pidx","removeStim","DaqTab","newDaq","daq","d","removeDaq","Configuration","sending","handleConfig","role","Arduino","availablePorts","setAvailablePorts","selectedPort","setSelectedPort","statusMessage","setStatusMessage","configWindow","showConfigWindow","info","showInfo","listPorts","port","device","arduinoSettings","firmware_version","connectPort","lg","defaultValue","product","Main","defaultActiveKey","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.566e1484.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\n\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nexport default function File(props){\n\n  const [fileConfig, setFileConfig] = useState(null);\n\n  const closeSession = (event) => {\n    fetch('/api/settings', {method:'DELETE'})\n      .then(resp => { if (resp.ok) {console.log(\"Success\")} })\n  }\n\n  const loadConfiguration = (event) => {\n    fetch('/api/file')\n      .then(resp => resp.json()\n      .then(data => console.log(data)))\n  }\n\n  const saveConfiguration = (event) => {}\n\n  const setAsDefault = (event) => {}\n\n  const loadDefault = (event) => {}\n\n  const handleChange = (event) => setFileConfig({...fileConfig, [event.target.id]:event.target.value})\n\n  useEffect(() => {\n    fetch('/api/settings/file')\n      .then(resp => {\n        if (resp.ok) {return resp.json()}\n        else { console.error(resp) }})\n      .then(data=>setFileConfig(data))\n  },[])\n\n  return (\n    <div>{\n        !fileConfig ? null :\n      <Container>\n        <Form.Group as={Row} className=\"mt-3 justify-content-center\">{\n          [[\"Enter Username\", \"user\"], [\"Enter MouseID\", \"mouse\"]].map(([pl,lbl], idx) => {\n            return (\n              <Form.Group as={Col} sm={1} md={2} key={idx}>\n                <Form.Control placeholder={pl} id={lbl} onChange={handleChange}/>\n                <Form.Text muted>{lbl.charAt(0).toUpperCase() + lbl.slice(1)}</Form.Text>\n              </Form.Group>\n            )\n          })\n        }</Form.Group>\n      {\n        <Form.Group as={Row} className=\"justify-content-center\">\n          <Form.Group as={Col} xs={4} md={1} className=\"pr-0\">\n            <Form.Control type=\"number\" min=\"0\" step=\"0.01\" placeholder=\"Enter Length of Run\"\n              id=\"run_length\" value={fileConfig.run_length} onChange={handleChange}/>\n            <Form.Text muted>Run Duration</Form.Text>\n          </Form.Group>\n          <Form.Group as={Col} xs={4} md={1} className=\"pl-0\">\n            <Form.Control as=\"select\" value={fileConfig.run_length_unit}\n              onChange={handleChange} id=\"run_length_unit\" custom>\n              {['sec', 'min', 'hr'].map(dur=>{\n                return (\n                  <option key={dur}>{dur}</option>\n                )\n              })}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={4} md={1} >\n            <Form.Control type=\"number\" min=\"0\" step=\"1\" placeholder=\"Enter Number of Runs\"\n              value={fileConfig.number_of_runs}  onChange={handleChange} id=\"number_of_runs\"/>\n            <Form.Text muted>Number of Runs</Form.Text>\n          </Form.Group>\n        </Form.Group>\n      }\n      <Form.Group as={Row} className=\"justify-content-center\">\n        <Col md={4}>\n          <Alert variant=\"success\" className=\"text-center\">\n            Files to be Saved to: <b>{fileConfig.directory}</b>\n          </Alert>\n        </Col>\n      </Form.Group>\n      <Row className=\"justify-content-center\">\n          <ButtonGroup>\n            <Button variant=\"danger\" className='ml-1' onClick={closeSession}>Close</Button>\n            <DropdownButton variant=\"secondary\" className='ml-1' as={ButtonGroup}\n              title=\"File\">\n              <Dropdown.Item eventKey=\"1\" onClick={saveConfiguration}>Save Configuration</Dropdown.Item>\n              <Dropdown.Item eventKey=\"2\" onClick={loadConfiguration}>Load Configuration</Dropdown.Item>\n              <Dropdown.Item eventKey=\"3\" onClick={loadDefault}>Load Default</Dropdown.Item>\n              <Dropdown.Item eventKey=\"4\" onClick={setAsDefault}>Set As Default</Dropdown.Item>\n            </DropdownButton>\n            <Button className='ml-1'>Start Acquisition</Button>\n          </ButtonGroup>\n      </Row>\n      </Container>\n    }</div>\n  )\n}\n","import {useState, useEffect} from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Alert from 'react-bootstrap/Alert';\nimport Table from 'react-bootstrap/Table';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\n\nexport default function EditCameras(props){\n\n  const [foundCameras, setFoundCameras] = useState([]);\n  const [isSearching, setSearching] = useState(false);\n\n  const searchCameras = (event) => {\n    setFoundCameras([]);\n    setSearching(true);\n    fetch('/api/devices/cameras')\n      .then(resp => resp.json()\n      .then(data => {\n        // Filter out cameras that are already added\n        let filteredCameras = data\n        Object.values(props.cameras).map(cam=> {\n          console.log(cam);\n        })\n        setFoundCameras(filteredCameras);\n        setSearching(false);\n      }))\n  }\n\n  const generateId = (length) => {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  const addCamera = (event, idx) => {\n    event.target.textContent = 'Adding...';\n    event.target.disabled = true;\n    const id = generateId(10);\n    // Send Message to API\n    fetch('/api/settings/'+id, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({...foundCameras[idx],id:id}) })\n      .then(resp => {\n        if (resp.ok) { return resp.json()}\n        else { console.error(resp.message) }\n      })\n      .then(data => {\n        let oldCameras = [...foundCameras]\n        oldCameras.splice(idx, 1)\n        setFoundCameras(oldCameras);\n        props.setCameras({...props.cameras, [id]:data})\n      })\n\n  }\n\n  const removeCamera = (event, id) => {\n    //Send Message to API\n    fetch('/api/settings/'+id, {\n      method: \"DELETE\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({config:null})})\n    .then(resp => {\n      if (resp.ok) {\n        let newCameras = {...props.cameras};\n        delete newCameras[id];\n        props.setCameras(newCameras)\n      }\n    })\n    .catch(err=> console.log(err))\n  }\n\n  useEffect(()=> {\n    searchCameras(null)\n  },[])\n  const cameraTable = (cameras, text) => {\n    return (\n      <Table className=\"text-center\">\n        <tbody>\n          <tr><th></th><th>Interface</th><th>Index</th><th></th></tr>\n          {\n          cameras.map((cam, idx)=>{\n            const [func, id] = (text === 'Add') ? [addCamera,idx] : [removeCamera,cam.id]\n            if (text === 'Add') {\n              const add = Object.values(props.cameras).map((c)=>{\n                if (c.interface === cam.interface && c.index === cam.index) {\n                    return false\n                } else {\n                  return true\n                }\n              });\n              if (!add.every(v=>v===true)) {return null}\n            }\n            return(\n              <tr key={idx}>\n                <td>\n                  <Button onClick={(e)=>func(e, id)}>{text}</Button>\n                </td>\n                <td>{cam.interface}</td>\n                <td>{cam.index}</td>\n                <td>\n                  <Button variant=\"secondary\">Show Info</Button>\n                </td>\n              </tr>\n            )\n          })\n        }\n        </tbody>\n      </Table>\n    )\n  }\n\n  return(\n    <div>{\n      <Modal show={props.show} onHide={props.hideEditing}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Choosing Cameras\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row className=\"mb-3\">\n              <Col>\n                <Modal.Title>\n                  Available Cameras\n                </Modal.Title>\n              </Col>\n              <Col><Button onClick={searchCameras}>Search</Button></Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n              {\n                isSearching ?\n                <Alert variant='info'>\n                  <Spinner animation=\"border\" size='sm'/>\n                    Searching for Cameras...\n                </Alert> : null\n              }\n              {\n                foundCameras.length > 0 ? cameraTable(foundCameras, 'Add') : null\n              }\n            </Row>\n            <Row className=\"mb-3\">\n              <Col>\n                <Modal.Title>\n                  Current Cameras\n                </Modal.Title>\n              </Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n              {\n                Object.values(props.cameras).length > 0 ?\n                cameraTable(Object.values(props.cameras), 'Remove') :\n                <Alert variant='warning'>No Cameras Added</Alert>\n              }\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    }</div>\n  )\n}\n","import {useRef,useEffect,useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\n\nconst ImageDraw = (props) => {\n\n  const [coor, setCoor] = useState({draw:false,x:0,y:0,ix:0,iy:0});\n  const [cropper, setCropper] = useState({height:null,width:null,objectFit:'cover'})\n\n  const canvasRef = useRef();\n  const imageRef = useRef();\n  const containerRef = useRef();\n\n  const handleUp = (event) => {\n    const { height, naturalHeight } = imageRef.current;\n    const scale = height/naturalHeight;\n    const { x, y, iy, ix } = coor;\n    const { fullHeight, fullWidth } = props.camera.aoi;\n    let aoi;\n    if (event.button === 2) {\n      aoi = { ...props.camera.aoi, height:fullHeight, width:fullWidth, x:0, y:0 }\n    } else {\n      setCropper({...cropper, height:Math.abs(y-iy)+\"px\",width:Math.abs(x-ix)+\"px\"})\n      aoi = {\n        ...props.camera.aoi,\n        height:parseInt(Math.abs(y-iy)/scale),\n        width:parseInt(Math.abs(x-ix)/scale),\n        x:parseInt(Math.min(x, ix)/scale),\n        y:parseInt(Math.min(y, iy)/scale)\n      }\n    }\n    props.setCamera({...props.camera, aoi:aoi})\n    setCoor({draw:false,x:0,y:0,ix:0,iy:0})\n  }\n\n  const handleDown = (event) => {\n    const { left, top} =  canvasRef.current.getBoundingClientRect()\n    const { clientX, clientY } = event;\n    setCoor({ix:clientX-left,iy:clientY-top,x:clientX-left,y:clientY-top,draw:true})\n  }\n\n  const handleMove = (event) => {\n    const { left, top} =  canvasRef.current.getBoundingClientRect()\n    const { clientX, clientY } = event;\n    if (coor.draw) { setCoor({...coor, x:clientX-left,y:clientY-top}) }\n  }\n\n  useEffect(()=>{\n    let canvas = canvasRef.current;\n    let ctx = canvas.getContext('2d');\n    const { height, width } = imageRef.current;\n    canvas.height = height;\n    canvas.width = width;\n    ctx.clearRect(0,0,canvas.width,canvas.height)\n    ctx.strokeStyle = 'red';\n    const { ix, iy, x, y } = coor;\n    if (coor.draw) {ctx.strokeRect(ix,iy,x-ix,y-iy)}\n  })\n\n  useEffect(()=>{\n    const scale = imageRef.current.naturalHeight/imageRef.current.height;\n  },[props.camera.aoi])\n\n  return (\n    <div onMouseDown={handleDown} onMouseMove={handleMove} onMouseUp={handleUp}>\n      <canvas ref={canvasRef} onContextMenu={(e)=>e.preventDefault()} className=\"position-absolute\"\n        style={cropper}/>\n      <Image ref={imageRef} src={\"/api/feed/\"+props.camera.id} fluid draggable={false}\n        style={cropper}/>\n    </div>\n  )\n}\n\nexport default function ConfigureCamera(props) {\n\n  // Store temprary viewing settings\n  const [camera, setCamera] = useState({aoi:{binning:null}});\n\n  const handleSave = () => console.log(camera);\n\n  const handleSwitch = (event) => {\n    if (event.target.id === 'primary'){\n      setCamera({...camera, primary:event.target.checked})\n    } else {\n      var newX; var newY;\n      const {fullWidth, fullHeight, x, y, height, width} = camera.aoi;\n      if( event.target.checked) {\n        newX = (fullWidth-width)/2\n        newY = (fullHeight-height)/2\n      } else { newX=x; newY=y}\n      setCamera({...camera, aoi:{...camera.aoi, centered:event.target.checked, x:newX, y:newY}})\n    }\n  }\n\n  const handleSelect = (event) => {\n    if (event.target.id === 'binning'){\n      setCamera({...camera,aoi:{...camera.aoi, binning:event.target.value}})\n    } else {\n      setCamera({...camera, dtype:event.target.value})\n    }\n  }\n\n  const handleNumber = (event) => {\n    setCamera({...camera, aoi:{...camera.aoi,\n      [event.target.id]:event.target.value\n    }});\n  }\n\n  const calculateFrameSize = () => {return \"4898\"}\n\n  useEffect(() => {\n    setCamera({...props.cameras[props.selected]})\n  },[props.selected])\n\n  return (\n    <div>{\n    <Modal show={props.selected === null ? false : true}\n      onHide={props.onHide} size='xl'>\n      {\n        <div>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Configuring Camera\n          </Modal.Title>\n        </Modal.Header>\n        { !camera.aoi ? null :\n          <Modal.Body>\n            <Row className=\"justify-content-center\"><ImageDraw camera={camera} setCamera={setCamera}/></Row>\n            <Tabs className=\"mt-3\">\n              <Tab eventKey=\"aoiTab\" title=\"AOI\">\n                <Container>\n                  <Row className=\"justify-content-center mt-3 align-items-center\" xs={1} sm={4}>\n                    <InputGroup as={Col}>\n                      <InputGroup.Text>Binning</InputGroup.Text>\n                      <FormControl as=\"select\" custom className=\"text-center\"\n                        value={camera.aoi.binning} onChange={handleSelect} id=\"binning\">\n                        {\n                          ['1x1','2x2','4x4','8x8'].map(bin=><option key={bin}>{bin}</option>)\n                        }\n                      </FormControl>\n                    </InputGroup>\n                    <Col className=\"text-center\">\n                      <Form.Check type=\"switch\" id=\"centered\" label=\"Centered\"\n                        value={camera.aoi.centered} onChange={handleSwitch}>\n                      </Form.Check>\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-center mt-3\" xs={2} sm={6}>\n                    {\n                      [\"height\", \"width\", \"x\", \"y\"].map(setting => {\n                        return (\n                          <Form.Group as={Col} key={setting}>\n                            <Form.Control type=\"number\" min=\"0\" step=\"1\" className=\"text-center\"\n                              value={camera.aoi[setting]} id={setting} onChange={handleNumber}/>\n                            <Form.Text muted>\n                              {setting.charAt(0).toUpperCase()+setting.slice(1)}\n                            </Form.Text>\n                          </Form.Group>\n                        )\n                      })\n                    }\n                  </Row>\n                </Container>\n              </Tab>\n              <Tab eventKey=\"framerateKey\" title=\"Framerate\">\n                <Container className=\"mt-3\">\n                  <Form.Group as={Row} className=\"justify-content-center\">\n                    <Form.Check type=\"switch\" label=\"Primary\" value={camera.primary}\n                        onChange={handleSwitch} id=\"primary\"/>\n                    </Form.Group>\n                    <Form.Group as={Row} xs={4} className=\"justify-content-center\">\n                      <Form.Group>\n                        <Form.Control type=\"number\" min=\"0\" step=\"0.01\"\n                          value={camera.framerate} disabled={camera.primary?false:true}\n                          onChange={handleNumber}/>\n                        <Form.Text muted>Framerate</Form.Text>\n                      </Form.Group>\n                    </Form.Group>\n                </Container>\n              </Tab>\n              <Tab eventKey=\"pixelKey\" title=\"Pixel Format\">\n                <Container className=\"mt-3\">\n                  <Form.Group as={Row} className=\"justify-content-center\">\n                    <Form.Group>\n                      <Form.Control as=\"select\" custom value={camera.dtype}\n                          onChange={handleSelect}>\n                          {['8-bit','12-bit','16-bit','32-bit'].map(bit=>{\n                            return(<option key={bit}>{bit}</option>)\n                          })}\n                      </Form.Control>\n                      <Form.Text muted>Bits Per Pixel</Form.Text>\n                    </Form.Group>\n                  </Form.Group>\n                  <Form.Group as={Row} className=\"justify-content-center\">\n                    <Form.Group>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>{calculateFrameSize()}</InputGroup.Text>\n                        <InputGroup.Text>MB</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Text muted>MB per Frame</Form.Text>\n                    </Form.Group>\n                  </Form.Group>\n                </Container>\n              </Tab>\n            </Tabs>\n          </Modal.Body>\n        }\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={props.onHide}>Close</Button>\n          <Button onClick={handleSave}>Save Changes</Button>\n        </Modal.Footer>\n      </div>}\n    </Modal>\n    }</div>\n  )\n}\n","import {useState,useEffect} from 'react';\n\nimport EditCameras from './Edit';\nimport ConfigureCamera from './Configure';\n\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Overlay from 'react-bootstrap/Overlay';\n\nexport default function Cameras(props){\n\n  // State for storing camera configuration\n  const [cameras, setCameras] = useState({});\n\n  // Viewing states\n  const [editing, showEditing] = useState(false);\n  const [selectedCamera, setSelectedCamera] = useState(null);\n\n  useEffect(() => {\n    fetch('/api/settings/cameras')\n      .then(resp => {\n        if (resp.ok){ return resp.json() }\n        else { console.error(resp.message) } })\n      .then(data => setCameras(data))\n  },[])\n\n  console.log(cameras);\n\n  return (\n    <div className=\"mt-3\">\n    {<Container className=\"text-center h-100\">\n        <Row className=\"align-items-center\">\n          {Object.keys(cameras).map((key, idx) => {\n            const cam = cameras[key]\n            return (\n              <Col key={idx}>\n                <Image src={\"api/feed/\"+cam.id} fluid style={{cursor:'pointer'}}\n                  onClick={()=>setSelectedCamera(cam.id)} alt={cam.id}/>\n              </Col>\n            )\n          })}\n        </Row>\n        <Row className=\"mt-3\"><Col>\n          <Button onClick={()=>showEditing(true)}>\n            {Object.keys(cameras).length === 0 ? \"Add Camera(s)\" : \"Edit Camera(s)\"}\n          </Button>\n        </Col></Row>\n      <EditCameras cameras={cameras} setCameras={setCameras}\n        hideEditing={()=>showEditing(false)} show={editing}/>\n      <ConfigureCamera cameras={cameras} setCameras={setCameras} selected={selectedCamera}\n        onHide={()=>setSelectedCamera(null)}/>\n    </Container>}\n    </div>\n  )\n}\n","import {useState, useEffect} from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst StrobingTab = (props) => {\n\n  const addLed = (event) => {\n    props.setConfig({...props.config,\n      leds:[...props.config.leds, {name:'New LED',pin:0}]\n    })\n  }\n\n  const removeLed = (idx) => {\n    let newLeds = [...props.config.leds];\n    newLeds.splice(idx, 1)\n    props.setConfig({...props.config, leds:newLeds})\n  }\n\n  const testLed = (idx) => {\n    // TODO:\n  }\n\n  const handleLed = (event, idx) => {\n    const {value, type} = event.target;\n    const key = type === 'text' ? 'name' : 'pin';\n    let leds = [...props.config.leds];\n    leds[idx][key] = value;\n    props.setConfig({...props.config, leds:leds})\n  }\n\n  return (\n    <div>{\n      <Container className=\"mt-3\">\n        <Form.Group as={Row} className=\"justify-content-center\">\n          <Col xs={4} sm={3}>\n            <Form.Control type=\"number\" min=\"0\" max=\"40\" step=\"1\" value={props.config.trigger}\n              onChange={(e)=>props.setConfig({...props.config, trigger:e.target.value})}/>\n            <Form.Text muted>Trigger Pin</Form.Text>\n          </Col>\n        </Form.Group>\n        <Form.Group>\n        {\n          props.config.leds.map((led, idx) => {\n            return (\n              <Form.Group key={idx} as={Row} className=\"justify-content-center\">\n                <Form.Group as={Col} xs={5}>\n                  <Form.Control value={led.name} onChange={(e)=>handleLed(e, idx)}/>\n                  <Form.Text muted>LED Name</Form.Text>\n                </Form.Group>\n                <Form.Group as={Col} xs={4} sm={3}>\n                  <Form.Control type=\"number\" min=\"0\" max=\"40\" step=\"1\" value={led.pin}\n                    onChange={(e)=>handleLed(e, idx)}/>\n                  <Form.Text muted>LED Pin</Form.Text>\n                </Form.Group>\n                <ButtonGroup as={Col} sm={4} className=\"h-50\">\n                  <Button size=\"sm\" variant=\"secondary\" onClick={()=>removeLed(idx)}>Remove</Button>\n                  <Button size=\"sm\" onClick={()=>testLed(idx)}>Test</Button>\n                </ButtonGroup>\n              </Form.Group>\n            )\n          })\n        }\n        </Form.Group>\n        <Row className=\"text-center\">\n          <Col><Button onClick={addLed}>Add LED</Button></Col>\n        </Row>\n      </Container>\n      }</div>\n  )\n}\n\nconst StimTab = (props) => {\n\n  const addStim = (event) => props.setConfig({\n    ...props.config, stim:[...props.config.stim, {\n      type:'2PinStepper',name:\"New Stim\",pins:[0,1],stepSize:5\n    }]\n  })\n\n  const removeStim = (idx) => {\n    let newStim = [...props.config.stim];\n    newStim.splice(idx, 1)\n    props.setConfig({...props.config, stim:newStim})\n  }\n\n  const testStim = (idx) => {\n    // TODO:\n  }\n\n  const handleChange = (event, idx) => {\n    const {type, value, id, key} = event.target;\n    let newStim = [...props.config.stim]\n    if (type === 'select-one'){\n      newStim[idx].type = value;\n    } else if (type === 'text') {\n      newStim[idx].name = value;\n    } else if (id.slice(0,3) === 'pin') {\n      newStim[idx].pins[parseInt(id.substring(3))] = value;\n\n    } else {\n      newStim[idx].stepSize = value\n    }\n    props.setConfig({...props.config, stim:newStim})\n  }\n\n  return (\n    <div>{\n        <Container className=\"mt-3\">\n          {\n            props.config.stim.map((s, idx) => {\n              return(\n                <Form.Group key={idx} as={Row} className=\"justify-content-center\">\n                  <Row className=\"justify-content-center\">\n                    <Form.Group as={Col} xs={6} sm={5}>\n                        <Form.Control value={s.name} onChange={(e)=>handleChange(e, idx)}/>\n                        <Form.Text muted>Name</Form.Text>\n                      </Form.Group>\n                      <Form.Group as={Col} xs={6} sm={5}>\n                        <Form.Control as=\"select\" custom value={s.type} onChange={(e)=>handleChange(e, idx)}>\n                          <option>2PinStepper</option>\n                          <option>4PinStepper</option>\n                        </Form.Control>\n                        <Form.Text muted>Type</Form.Text>\n                      </Form.Group>\n                      <Form.Group as={Col} sm={10}>\n                        <Row>\n                          {\n                            [...Array(parseInt(s.type.charAt(0))).keys()].map((pin,pidx)=>{\n                              return(\n                                <Col key={pidx}>\n                                  <Form.Control type=\"number\" id={\"pin\"+pidx} key={pidx}\n                                    value={s.pins[pidx]} onChange={(e)=>handleChange(e,idx)}\n                                    min=\"0\" max=\"40\" step=\"1\"/>\n                                </Col>\n                              )\n                            })\n                          }\n                        </Row>\n                        <Form.Text muted>Pins</Form.Text>\n                      </Form.Group>\n                      <Form.Group as={Col} xs={4} sm={3}>\n                        <Form.Control type=\"number\" min=\"1\" step=\"1\" value={s.stepSize}\n                          onChange={(e)=>handleChange(e,idx)}/>\n                        <Form.Text muted>Step Size</Form.Text>\n                      </Form.Group>\n                    </Row>\n                  <Row>\n                    <ButtonGroup as={Col}>\n                      <Button size=\"sm\" variant=\"secondary\" onClick={()=>removeStim(idx)}>\n                        Remove\n                      </Button>\n                      <Button size=\"sm\">Test</Button>\n                    </ButtonGroup>\n                  </Row>\n                </Form.Group>\n              )\n            })\n          }\n          <Row className=\"mt-3 text-center\">\n            <Col><Button onClick={addStim}>Add Stim</Button></Col>\n          </Row>\n        </Container>\n      }</div>\n  )\n}\n\nconst DaqTab = (props) => {\n\n  const handleChange = (event, idx) => {\n      let newDaq = [...props.config.daq]\n      if (event.target.type===\"number\") {\n        newDaq[idx].pin = event.target.value;\n      } else {\n        newDaq[idx].name = event.target.value;\n      }\n      props.setConfig({...props.config, daq:newDaq})\n  }\n\n  const addDaq = (event) => props.setConfig({\n    ...props.config,daq:[...props.config.daq, {name:'New Daq',pin:0}]\n  })\n\n  const removeDaq = (idx) => {\n    let newDaq = [...props.config.daq]\n    newDaq.splice(idx, 1)\n    props.setConfig({...props.config, daq:newDaq})\n  }\n\n  const testDaq = (idx) => {\n    // TODO:\n  }\n\n  return (\n    <div>{\n        <Container className=\"mt-3\">\n          {\n            props.config.daq.map((d, idx)=> {\n              return(\n                <Form.Group as={Row} key={idx} className=\"justify-content-center\">\n                  <Form.Group as={Col} xs={5}>\n                    <Form.Control value={d.name} onChange={(e)=>handleChange(e,idx)}/>\n                    <Form.Text muted>Name</Form.Text>\n                  </Form.Group>\n                  <Form.Group as={Col} xs={4} sm={3}>\n                    <Form.Control value={d.pin} type=\"number\" min=\"0\" max=\"40\"\n                      step=\"1\" onChange={(e)=>handleChange(e,idx)}/>\n                    <Form.Text muted>Pin</Form.Text>\n                  </Form.Group>\n                  <ButtonGroup as={Col} className='h-50'>\n                    <Button size=\"sm\" variant=\"secondary\" onClick={()=>removeDaq(idx)}>\n                      Remove\n                    </Button>\n                    <Button size=\"sm\">\n                      Test\n                    </Button>\n                  </ButtonGroup>\n                </Form.Group>\n              )\n            })\n          }\n          <Row className=\"justify-content-center\">\n            <Button onClick={addDaq}>Add DAQ</Button>\n          </Row>\n        </Container>\n      }</div>\n  )\n}\n\nexport default function Configuration(props) {\n\n  // State variables\n  const [sending, setSending] = useState(false);\n  const [config, setConfig] = useState({});\n\n  // Send settings to Python\n  const handleConfigure = () => {\n    // TODO: Send values to Python API\n    fetch('/api/settings/arduino', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(config)\n    })\n    .then( resp => {\n      if (resp.ok) {return resp.json()}\n      else { console.error(resp.message)} })\n    .then( data =>  setConfig(data))\n\n  };\n\n  useEffect(() => {\n    fetch('/api/settings/arduino')\n      .then(resp => {\n        if (resp.ok) {return resp.json()}\n        else { console.error(resp) } } )\n      .then( data => setConfig(data) )\n  },[])\n\n  return(\n    <Modal show={props.show} onHide={props.handleConfig}>\n      <Modal.Header closeButton>\n        <Modal.Title>Arduino Configuration</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n\n        <Tabs>\n          <Tab eventKey='strobingTab' title=\"Strobing\">\n            <StrobingTab config={config} setConfig={setConfig}/>\n          </Tab>\n          <Tab eventKey='stimTab' title=\"Stim\">\n            <StimTab config={config} setConfig={setConfig}/>\n          </Tab>\n          <Tab eventKey='daqTab' title=\"Data Acquisition\">\n            <DaqTab config={config} setConfig={setConfig}/>\n          </Tab>\n        </Tabs>\n\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={props.handleConfig}>\n          Close\n        </Button>\n        { !sending ?\n          <Button variant=\"primary\" onClick={handleConfigure}>\n            Configure\n          </Button>\n          :\n          <Button variant=\"primary\" disabled>\n            <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\"/>\n            Sending to Arduino\n          </Button>\n        }\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","// React Components\nimport {useState,useEffect, useRef} from 'react';\n\n// Load Components\nimport Configuration from './Configuration';\n\n// Bootstrap Components\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default function Arduino(props){\n\n  // UI State Variables\n  const [config, setConfig] = useState({})\n  const [availablePorts, setAvailablePorts] = useState([]);\n  const [selectedPort, setSelectedPort] = useState(0);\n  const [statusMessage, setStatusMessage] = useState(null);\n\n  // Modal View Controllers\n  const [configWindow, showConfigWindow] = useState(false);\n  const [info, showInfo] = useState(false);\n\n  // Close and open Configuration Window\n  const handleConfig = () => showConfigWindow(!configWindow);\n\n  const handleInfo = () => showInfo(!info);\n\n  const listPorts = () => {\n    setAvailablePorts([]);\n    fetch('/api/devices/arduinos')\n      .then(resp=> resp.json()\n      .then(data => {\n        if (data.length === 0) {\n          setStatusMessage(<Alert variant='danger'>No Arduinos Found</Alert>)\n        } else {\n          setStatusMessage(null);\n          setAvailablePorts(data)\n        }\n      }))\n  }\n\n  const connectPort = () => {\n\n    const port = availablePorts[selectedPort];\n\n    setStatusMessage(\n      <Alert variant='warning'>\n        <Spinner animation='border' className='mr-3' size='sm'></Spinner>\n        Connecting to <b>{port.device}</b>...\n      </Alert>\n    )\n\n    const arduinoSettings = {key:'arduino',port:port.device}\n\n    fetch('/api/settings/arduino', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(arduinoSettings)})\n      .then(resp => {\n        if (resp.ok) {return resp.json()}\n        else { console.error(resp.message) }\n      })\n      .then(data => {\n\n        if (!data.firmware_version) {\n\n          setStatusMessage((\n            <Alert variant='danger'>\n              <p>\n                <b>ERROR:</b> Arduino at <b>{port.device}</b> does not have\n                compatible firmware.\n                <Button className='ml-3'>Upload Firmware...</Button>\n              </p>\n            </Alert>\n          ))\n\n        }\n\n        else {\n\n          setConfig(data);\n          setStatusMessage((\n            <Alert variant='success'>\n              <p>\n                Connected to the Arduino at <b>{port.device}</b>\n              </p>\n              <p>Firmware Version: <b>{data.firmware_version}</b></p>\n            </Alert>\n          ))\n        }\n      })\n    }\n\n  useEffect(() => {\n    if (availablePorts.length === 0) {}\n    else { connectPort() }\n  },[availablePorts, selectedPort])\n\n  const getConfiguration = () => {\n\n  }\n\n  useEffect(() => { listPorts(); getConfiguration()},[])\n\n  return(\n    <div>{\n      <Container>\n        <Row className=\"mt-3 justify-content-center\">\n          <Form.Group as={Col} sm={1} lg={4}>\n            <Form.Control as=\"select\" custom>\n              { availablePorts.length === 0 ?\n                <option disabled defaultValue>No Arduinos Found.</option> :\n                availablePorts.map((port, idx) => {\n                  return(\n                    <option onClick={()=>setSelectedPort(idx)} key={idx}>\n                      {port.product} - {port.device}\n                    </option>\n                  )\n                })\n              }\n            </Form.Control>\n            <Form.Text muted>Select an Arduino</Form.Text>\n          </Form.Group>\n          <Form.Group as={Col} sm={4}>\n            <ButtonGroup>\n              <Button variant=\"secondary\" onClick={()=>listPorts()}>Refresh</Button>\n              <Button variant=\"secondary\" onClick={handleInfo}\n                disabled={availablePorts.length === 0 ? true : false}>\n                { info ? \"Hide Info\" : \"Show Info\" }\n              </Button>\n              <Button variant=\"primary\" disabled={config.firmware_version? false:true }\n                onClick={handleConfig}>Configure</Button>\n            </ButtonGroup>\n          </Form.Group>\n        </Row>\n        <Row className='justify-content-center'>\n          <Col xs={12} md={8}>{statusMessage}</Col>\n        </Row>\n        <Configuration port={availablePorts[selectedPort]} show={configWindow} handleConfig={handleConfig}/>\n      </Container>\n    }</div>\n  )\n}\n","import { useState, useEffect } from 'react';\n\n// Bootstrap Component\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Modal from 'react-bootstrap/Modal';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\n// Each Tab's Components\nimport File from './tabs/File/Main';\nimport Cameras from './tabs/Cameras/Main';\nimport Arduino from './tabs/Arduino/Main';\nimport Login from './Login';\n\nconst StatusPage = (props) => {\n\n  return (\n    <div>{\n      <Modal className='h-100' show={props.message ? true : false}>\n          <Alert variant={props.variant}>\n            <Alert.Heading>\n              {props.variant === 'danger' ? \"ERROR:\" :\n                <div><Spinner animation=\"grow\"></Spinner> Loading pyWFOM</div>\n              }\n            </Alert.Heading>\n            <p>{props.message}</p>\n              {\n                props.variant !== 'danger'? null :\n                <Button onClick={()=>window.location.reload()}>Refresh</Button>\n              }\n          </Alert>\n      </Modal>\n      }</div>\n  )\n}\n\nexport default function Main() {\n\n  const [loading, setLoading] = useState({});\n  const [settings, setSettings] = useState({})\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  return (\n    <div>\n      {\n        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey='runTab' title=\"Run\">\n            <File />\n          </Tab>\n          <Tab eventKey='camerasTab' title=\"Cameras\">\n            <Cameras />\n          </Tab>\n          <Tab eventKey='arduinoTab' title=\"Arduino\">\n            <Arduino />\n          </Tab>\n        </Tabs>\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}