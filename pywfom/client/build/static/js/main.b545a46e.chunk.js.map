{"version":3,"sources":["tabs/File/File.js","tabs/Cameras/Edit/Edit.js","tabs/Cameras/Cameras.js","tabs/Arduino/Configuration.js","tabs/Arduino/Arduino.js","Main.js","index.js"],"names":["File","Container","InputGroup","className","Form","Control","type","placeholder","min","step","as","ButtonGroup","Button","variant","Edit","props","useState","foundCameras","setFoundCameras","useEffect","Modal","show","onHide","handleAdd","Header","closeButton","Body","Title","length","Alert","Spinner","animation","size","Table","map","cam","idx","onClick","e","event","target","textContent","cameras","camera","pop","fetch","method","headers","body","JSON","stringify","then","resp","json","data","setCurrentCameras","currentCameras","addCamera","device","index","toString","removeCamera","Check","Footer","Cameras","add","showAdd","setCameras","Col","Image","fluid","src","StrobingTab","handleLed","value","newLeds","leds","setConfig","config","Row","onChange","trig","Text","led","StimTab","handleStim","newStim","stim","pins","push","splice","Group","controlId","removeStim","pin","pidx","handlePin","DaqTab","daq","newDaq","removeDaq","Configuration","sending","port","handleConfig","Tabs","Tab","eventKey","title","disabled","role","console","log","catch","err","Arduino","showConfig","info","showInfo","message","setMessage","setDisabled","ports","setPort","listPorts","status","custom","defaultValue","product","Object","keys","key","charAt","toUpperCase","slice","Main","defaultActiveKey","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b545a46e.chunk.js","sourcesContent":["import Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Container from 'react-bootstrap/Container';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\n\n\nexport default function File(){\n  return (\n    <Container>\n      <InputGroup className=\"m-3\">\n        <Form.Control type=\"text\" placeholder=\"Enter UNI\" />\n        <Form.Control className=\"ml-3\" type=\"text\" placeholder=\"Mouse ID\" />\n      </InputGroup>\n      <InputGroup className=\"m-3\">\n        <Form.Control type=\"number\" placeholder=\"Run Length\" min=\"0\" step=\"0.01\"/>\n        <Form.Control className=\"mr-5\" as=\"select\">\n          <option>Sec</option>\n          <option>Min</option>\n          <option>Hr</option>\n        </Form.Control>\n        <Form.Control className=\"ml-3\" type=\"number\" placeholder=\"Number of Runs\" min=\"0\" step=\"1\"/>\n      </InputGroup>\n      <InputGroup className=\"m-3\">\n        <Form.File/>\n      </InputGroup>\n      <ButtonGroup className=\"float-right\">\n        <Button variant=\"secondary\">Close</Button>\n        <Button variant=\"secondary\" className='ml-1 mr-1'>Set Default</Button>\n        <Button>Start Acquisition</Button>\n      </ButtonGroup>\n\n    </Container>\n  )\n}\n","import {useState, useEffect} from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Alert from 'react-bootstrap/Alert';\nimport Table from 'react-bootstrap/Table';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nexport default function Edit(props){\n\n  const [foundCameras, setFoundCameras] = useState([]);\n\n  const addCamera = (event, idx) => {\n    event.target.textContent = 'Adding...';\n    let cameras = [...foundCameras];\n    const camera = cameras.pop(idx)\n    // Send Message to API\n    fetch('/api/connection/', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(camera)})\n      .then(resp => resp.json()\n      .then(data => {\n        props.setCurrentCameras([...props.currentCameras, camera])\n        setFoundCameras(cameras)\n      })\n    )\n  }\n\n  const removeCamera = (idx) => {\n    //Send Message to API\n    fetch('/api/close/'+idx.toString(), {method: \"POST\"})\n    .then(resp => resp.json()\n    .then(data => {\n      let cameras = [...props.currentCameras];\n      setFoundCameras([...foundCameras, cameras.pop(idx)])\n      props.setCurrentCameras(cameras)\n    }))\n  }\n\n  useEffect(() => {\n    //fetch('/api/find')\n    //  .then(resp=> resp.json()\n    //  .then(data => setFoundCameras(data)))\n  },[])\n\n  // TODO: Set master camera\n\n  return(\n    <Modal show={props.show} onHide={props.handleAdd}>\n      <Modal.Header closeButton>\n      </Modal.Header>\n      <Modal.Body>\n        <Modal.Title>Available Cameras</Modal.Title>\n        {foundCameras.length === 0 ?\n          <Alert variant='info'>\n            <Spinner animation='border' size='sm' className='mr-3'></Spinner>\n              Searching for Cameras\n          </Alert>\n          :\n            <Table>\n              <tbody>\n                <tr><th></th><th>Device</th><th>Index</th></tr>\n                {foundCameras.map((cam,idx) => {\n                  return(\n                    <tr key={idx}>\n                      <td><Button onClick={(e)=>addCamera(e, idx)}>Add</Button></td>\n                      <td>{cam.device}</td>\n                      <td>{cam.index}</td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </Table>\n        }\n        <Modal.Title>\n          Current Cameras\n        </Modal.Title>\n        {\n          props.currentCameras.length === 0 ?\n          <Alert variant='warning'>No Cameras Added</Alert> :\n          <Table>\n            <tbody className='text-center'>\n              <tr><th></th><th>Master</th><th>Name</th><th>Type</th><th>Index</th></tr>\n              {props.currentCameras.map((cam,idx) => {\n                return(\n                  <tr key={idx}>\n                    <td><Button onClick={()=>removeCamera(idx)}>Remove</Button></td>\n                    <td><Form.Check/></td>\n                    <td><Form.Control type=\"text\"></Form.Control></td>\n                    <td>{cam.device}</td>\n                    <td>{cam.index}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n        }\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.handleAdd} variant=\"secondary\">Close</Button>\n        <Button variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import {useState} from 'react';\n\nimport Edit from './Edit/Edit';\n\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\n\nexport default function Cameras(){\n\n  const [add, showAdd] = useState(false);\n  const [cameras, setCameras] = useState([]);\n  const [selected, setSelected] = useState(0);\n  const handleAdd = (event) => showAdd(!add);\n\n  const handleThumbnail = (event) => {\n\n  }\n\n  return (\n    <Container className=\"text-center mt-3\">\n      {\n        cameras.length === 0 ? null :\n        cameras.map((cam, idx) => {\n          return(\n            <Col><Image fluid src={'/feed/'+idx.toString()}></Image></Col>\n          )\n        })\n      }\n      <Button className=\"m-3\" onClick={()=>showAdd(true)}>Edit Camera(s)</Button>\n      <Edit show={add} handleAdd={handleAdd} currentCameras={cameras}\n        setCurrentCameras={setCameras}/>\n    </Container>\n  )\n}\n","import {useState, useEffect} from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst StrobingTab = (props) => {\n\n  const addLed = (event) => {\n    props.setConfig(\n      {...props.config,\n        leds:[...props.config.leds, {'name':'New Lew','pin':0}]\n      }\n    )\n  }\n\n  const handleLed = (idx, value, type) => {\n    let newLeds = [...props.leds];\n    newLeds[idx][type] = value;\n    props.setConfig({...props.config, leds:newLeds});\n  }\n\n  const handleTrig = (value) => props.setConfig({...props.config, trig:value});\n\n  return (\n    <Form>\n\n      <Container>\n        <Row></Row>\n        <Row>\n          <Col></Col>\n          <Col>\n            <Form.Control type=\"number\" min=\"0\" step=\"1\" placeholder=\"Trigger Pin\"\n              onChange={(e)=>handleTrig(e.target.value)}/>\n            <Form.Text className=\"text-muted\">\n              Set the Trigger Pin\n            </Form.Text>\n          </Col>\n          <Col></Col>\n        </Row>\n\n      {props.config.leds.map((led, idx)=>{\n        return(\n          <Row key={idx}>\n            <Col>\n              <Form.Control type=\"text\" placeholder=\"LED Name\"\n                onChange={(e)=>handleLed(idx, e.target.value, 'name')}/>\n            </Col>\n            <Col>\n              <Form.Control type=\"number\" min=\"0\" step=\"1\" placeholder=\"LED Pin\"\n                onChange={(e)=>handleLed(idx, e.target.value, 'pin')}/>\n            </Col>\n            <Col>\n              <Button variant='secondary'>Remove</Button>\n            </Col>\n            <Col>\n              <Button variant='primary'>Test</Button>\n            </Col>\n          </Row>\n        )\n      })}\n\n        <Row>\n          <Col></Col><Col><Button onClick={addLed}>Add LED</Button></Col><Col></Col>\n        </Row>\n        <Form.Text className=\"text-muted\">\n          Configure LEDs\n        </Form.Text>\n      </Container>\n\n    </Form>\n  )\n}\n\nconst StimTab = (props) => {\n\n  // TODO: Test Stim\n  // TODO: Format Stim\n  // TODO: Remove Stim\n\n  const addStim = (event) => {\n    props.setConfig(\n      {\n        ...props.config,\n        stim:[...props.config.stim, {'name':'','type':'2PinStepper','pins':[\"0\",\"1\"]}]\n      }\n    )\n  }\n\n  const removeStim = (idx) => {\n    let newStim = [...props.config.stim]\n    newStim.splice(idx,1)\n    props.setConfig({...props.config,stim:newStim})\n  }\n\n  const handleStim = (idx, event, type) => {\n    let newStim = [...props.config.stim]\n    if (type === 'type' && event.target.value !== props.stim[idx].type){\n      if (event.target.value==='4PinStepper') {\n          newStim[idx].pins.push('0','1');\n      } else {\n        newStim[idx].pins.splice(-2,2);\n      }\n    }\n    newStim[idx][type] = event.target.value;\n    props.setConfig({...props.config, stim:newStim})\n  }\n\n  const handlePin = (event, idx, pidx) => {\n    let newStim = [...props.config.stim]\n    newStim[idx].pins[pidx] = event.target.value\n    props.setConfig({...props.config, stim:newStim})\n\n  }\n\n  return (\n    <Form>\n\n      <Form.Group as={Row}></Form.Group>\n\n      <Form.Group controlId=\"stims\">\n        {props.config.stim.map((stim, idx)=>{\n          return(\n            <Container>\n              <Row key={idx}>\n                <Col>\n                  <Form.Control type=\"text\" placeholder=\"Stim Name\"\n                    onChange={(e)=>handleStim(idx,e,'name')}/>\n                </Col>\n                <Col>\n                  <Form.Control onChange={(e)=>handleStim(idx,e,'type')} as=\"select\">\n                    <option>2PinStepper</option>\n                    <option>4PinStepper</option>\n                  </Form.Control>\n                </Col>\n                <Col>\n                  <Button variant='secondary' onClick={()=>removeStim(idx)}>Remove</Button>\n                </Col>\n                <Col>\n                  <Button variant='primary'>Test</Button>\n                </Col>\n              </Row>\n              {stim.pins.map((pin, pidx) => {\n                return (\n                  <Row>\n                    <Form.Control type=\"number\" min=\"0\" step=\"1\" placeholder=\"Pin\"\n                      onChange={(e)=> handlePin(e,idx,pidx)}/>\n                  </Row>\n                )\n              })}\n            </Container>\n          )\n        })}\n        </Form.Group>\n\n        <Form.Group>\n        <Row>\n          <Col></Col><Col><Button onClick={addStim}>Add Stim</Button></Col><Col></Col>\n        </Row>\n        <Row>\n          <Col>\n            <Form.Text className=\"text-muted\">\n              Configure Stim\n            </Form.Text>\n          </Col>\n        </Row>\n        </Form.Group>\n\n    </Form>\n  )\n}\n\nconst DaqTab = (props) => {\n\n  // TODO: Test DAQ\n  // TODO: Remove DAQ\n\n  const addDaq = (event) => props.setConfig({...props.config, daq:[{'name':'New DAQ','pin':0}]})\n\n  const removeDaq = (idx) => {\n    let newDaq = props.config.daq\n    newDaq.splice(idx,1)\n    props.setConfig({...props.config,daq:newDaq})\n  }\n\n  return (\n    <Form>\n\n      <Form.Group as={Row}></Form.Group>\n\n      <Form.Group controlId=\"stims\">\n        {props.config.daq.map((daq, idx)=>{\n          return(\n            <Row key={idx}>\n              <Col>\n                <Form.Control type=\"text\" placeholder=\"DAQ Name\"/>\n              </Col>\n              <Col>\n                <Form.Control type=\"number\" min=\"0\" step=\"1\" placeholder=\"DAQ Pin\"/>\n              </Col>\n              <Col>\n                <Button onClick={(e)=>removeDaq(idx)} variant='secondary'>Remove</Button>\n              </Col>\n              <Col>\n                <Button variant='primary'>Test</Button>\n              </Col>\n            </Row>\n          )\n        })}\n      </Form.Group>\n\n      <Form.Group>\n        <Row>\n          <Col><Button onClick={addDaq}>Add DAQ</Button></Col>\n        </Row>\n        <Row>\n          <Col>\n            <Form.Text className=\"text-muted\">\n              Configure Data Acquisition\n            </Form.Text>\n          </Col>\n        </Row>\n      </Form.Group>\n\n    </Form>\n  )\n}\n\nexport default function Configuration(props) {\n\n  // State variables\n  const [sending, setSending] = useState(false);\n  const [config, setConfig] = useState({\n    \"device\":\"arduino\", leds:[],daq:[],port:null,trig:null,stim:[]\n  });\n\n  // Send settings to Python\n  const handleSave = () => {\n    // TODO: Send values to Python API\n    fetch('/api/connection/', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(config)\n    })\n    .then(resp => resp.json()\n      .then(data => console.log(data))\n      .catch(err => console.log(err))\n    )\n    props.handleConfig();\n  };\n\n  return(\n    <Modal show={props.show} onHide={props.handleConfig}>\n      <Modal.Header closeButton>\n        <Modal.Title>Arduino Configuration</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n\n        <Tabs>\n          <Tab eventKey='strobingTab' title=\"Strobing\">\n            <StrobingTab config={config} setConfig={setConfig}/>\n          </Tab>\n          <Tab eventKey='stimTab' title=\"Stim\">\n            <StimTab config={config} setConfig={setConfig}/>\n          </Tab>\n          <Tab eventKey='daqTab' title=\"Data Acquisition\">\n            <DaqTab config={config} setConfig={setConfig}/>\n          </Tab>\n        </Tabs>\n\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={props.handleConfig}>\n          Close\n        </Button>\n        { !sending ?\n          <Button variant=\"primary\" onClick={handleSave}>\n            Save Changes\n          </Button>\n          :\n          <Button variant=\"primary\" disabled>\n            <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\"/>\n            Sending to Arduino\n          </Button>\n        }\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","// React Components\nimport {useState,useEffect} from 'react';\n\n// Load Components\nimport Configuration from './Configuration';\n\n// Bootstrap Components\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\n\nexport default function Arduino(){\n\n  // Modal View Controllers\n  const [config, showConfig] = useState(false);\n  const [info, showInfo] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n\n  // UI State Variables\n  const [ports, setPorts] = useState([]);\n  const [port, setPort] = useState(0);\n\n  // Close and open Configuration Window\n  const handleConfig = () => showConfig(!config);\n\n  const handleInfo = () => showInfo(!info);\n\n  const listPorts = () => {\n    fetch('/api/find')\n      .then(resp=> resp.json()\n      .then(data => console.log(data)\n      ))\n  }\n\n  const connectPort = () => {\n    setMessage((\n      <Alert variant='warning'>\n        <Spinner animation='border' className='mr-3' size='sm'></Spinner>\n        Connecting to <b>{ports[port].device}</b>...\n      </Alert>\n    ))\n    fetch('/connect/arduino', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(ports[port])})\n      .then(resp => resp.json()\n      .then(data => {\n        if (data.status === 'error') {\n          setMessage((\n            <Alert variant='danger'>\n              <p>\n                <b>ERROR:</b> Arduino at <b>{ports[port].device}</b> does not have\n                compatible firmware.\n                <Button className='ml-3'>Upload Firmware...</Button>\n              </p>\n            </Alert>\n          ))\n          setDisabled(true);\n        }\n      }))\n  }\n\n  // List available arduinos on Render\n  useEffect(() => {\n    listPorts();\n  }, [])\n\n  useEffect(() => {\n    if (ports.length === 0) {}\n    else { connectPort() }\n  },[ports, port])\n\n  return(\n    <Container>\n        <Form.Text className='text-muted'>Select an Arduino</Form.Text>\n          <InputGroup className=\"text-center mb-3\">\n            <Form.Control as=\"select\" custom>\n              { ports.length === 0 ?\n                <option disabled defaultValue>No Arduinos Found.</option> :\n                ports.map((port, idx) => {\n                  return(\n                    <option onClick={()=>setPort(idx)} key={idx}>\n                      {port.product} - {port.device}\n                    </option>\n                  )\n                })\n              }\n            </Form.Control>\n            <ButtonGroup>\n              <Button variant=\"secondary\" onClick={()=>listPorts()}>Refresh</Button>\n              <Button variant=\"secondary\" onClick={handleInfo}\n                disabled={ports.length === 0 ? true : false}>\n                { info ? \"Hide Info\" : \"Show Info\" }\n              </Button>\n              <Button variant=\"primary\" disabled={disabled} onClick={handleConfig}>Configure</Button>\n            </ButtonGroup>\n          </InputGroup>\n        <Configuration port={port} show={config} handleConfig={handleConfig}/>\n        { message }\n        { info ?\n            <Table>\n              <tbody>\n              {Object.keys(ports[port]).map((key,index)=>{\n                return (\n                  <tr key={index}>\n                    <th>{key.charAt(0).toUpperCase()+key.slice(1)}</th>\n                    <td>{ports[port][key]}</td>\n                  </tr>\n                )\n              })}\n              </tbody>\n            </Table>\n          : null\n        }\n      </Container>\n  )\n}\n","// Bootstrap Component\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\n// Each Tab's Components\nimport File from './tabs//File/File';\nimport Cameras from './tabs/Cameras/Cameras';\nimport Arduino from './tabs/Arduino/Arduino';\n\nexport default function Main() {\n  return (\n    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n      <Tab eventKey='runTab' title=\"File\">\n        <File/>\n      </Tab>\n      <Tab eventKey='camerasTab' title=\"Cameras\">\n        <Cameras/>\n      </Tab>\n      <Tab eventKey='arduinoTab' title=\"Arduino\">\n        <Arduino/>\n      </Tab>\n    </Tabs>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Main from './Main';\n\nReactDOM.render(<Main/>, document.getElementById('root'));\n"],"sourceRoot":""}