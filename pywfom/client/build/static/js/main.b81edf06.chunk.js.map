{"version":3,"sources":["tabs/File/Main.js","tabs/Cameras/Edit.js","tabs/Cameras/Configure.js","tabs/Cameras/Main.js","tabs/Arduino/Configuration.js","tabs/Arduino/Main.js","App.js","index.js"],"names":["File","props","useState","fileConfig","setFileConfig","handleChange","event","target","id","value","useEffect","fetch","then","resp","json","data","catch","error","console","log","Container","Form","Group","as","Row","className","map","idx","pl","lbl","Col","xs","Control","placeholder","onChange","Text","muted","charAt","toUpperCase","slice","type","min","step","run_length","run_length_unit","custom","dur","number_of_runs","Alert","variant","directory","ButtonGroup","Button","onClick","method","ok","DropdownButton","title","Dropdown","Item","eventKey","EditCameras","foundCameras","setFoundCameras","isSearching","setSearching","searchCameras","filteredCameras","Object","values","cameras","cam","addCamera","textContent","disabled","length","result","characters","charactersLength","i","Math","floor","random","generateId","headers","body","JSON","stringify","oldCameras","splice","setCameras","err","removeCamera","config","newCameras","cameraTable","text","Table","func","c","interface","index","every","v","e","Modal","show","onHide","hideEditing","Header","closeButton","Title","Body","Spinner","animation","size","ImageDraw","draw","x","y","ix","iy","coor","setCoor","height","width","objectFit","cropper","setCropper","canvasRef","useRef","imageRef","canvas","current","ctx","getContext","clearRect","strokeStyle","strokeRect","naturalHeight","camera","aoi","onMouseDown","getBoundingClientRect","left","top","clientX","clientY","onMouseMove","onMouseUp","scale","fullHeight","fullWidth","button","abs","parseInt","setCamera","ref","onContextMenu","preventDefault","style","Image","src","fluid","draggable","ConfigureCamera","binning","handleSwitch","primary","checked","newX","newY","centered","handleSelect","dtype","handleNumber","selected","Tabs","Tab","sm","InputGroup","FormControl","bin","Check","label","setting","framerate","bit","Prepend","Footer","Cameras","editing","showEditing","selectedCamera","setSelectedCamera","keys","key","cursor","alt","StrobingTab","handleLed","newLeds","leds","setConfig","trig","led","StimTab","handleStim","newStim","stim","pins","push","controlId","removeStim","pin","pidx","handlePin","DaqTab","daq","newDaq","removeDaq","Configuration","sending","port","handleConfig","role","Arduino","availablePorts","setAvailablePorts","selectedPort","setSelectedPort","statusMessage","setStatusMessage","configWindow","showConfigWindow","info","showInfo","listPorts","device","arduinoSettings","command","firmware_version","connectPort","defaultValue","product","Main","defaultActiveKey","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b81edf06.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\n\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nexport default function File(props){\n\n  const [fileConfig, setFileConfig] = useState(null);\n\n  const closeSession = (event) => {\n    fetch('/api/settings', {method:'DELETE'})\n      .then(resp => { if (resp.ok) {} else {} })\n  }\n\n  const loadConfiguration = (event) => {\n    fetch('/api/file')\n      .then(resp => resp.json()\n      .then(data => console.log(data)))\n  }\n\n  const handleChange = (event) => setFileConfig({...fileConfig, [event.target.id]:event.target.value})\n\n  useEffect(() => {\n    fetch('/api/settings/file')\n      .then(resp => resp.json()\n      .then(data=> setFileConfig(data)))\n      .catch(error => console.log(error))\n  },[])\n\n  return (\n    <div>{\n        !fileConfig ? null :\n      <Container>\n        <Form.Group as={Row} className=\"mt-3 justify-content-center\">{\n          [[\"Enter Username\", \"user\"], [\"Enter MouseID\", \"mouse\"]].map(([pl,lbl], idx) => {\n            return (\n              <Form.Group as={Col} xs={4} key={idx}>\n                <Form.Control placeholder={pl} id={lbl} onChange={handleChange}/>\n                <Form.Text muted>{lbl.charAt(0).toUpperCase() + lbl.slice(1)}</Form.Text>\n              </Form.Group>\n            )\n          })\n        }</Form.Group>\n      {\n        <Form.Group as={Row} className=\"justify-content-center\">\n          <Form.Group as={Col} xs={3} className=\"pr-0\">\n            <Form.Control type=\"number\" min=\"0\" step=\"0.01\" placeholder=\"Enter Length of Run\"\n              id=\"run_length\" value={fileConfig.run_length} onChange={handleChange}/>\n            <Form.Text muted>Run Duration</Form.Text>\n          </Form.Group>\n          <Form.Group as={Col} xs=\"auto\" className=\"pl-0\">\n            <Form.Control as=\"select\" value={fileConfig.run_length_unit}\n              onChange={handleChange} id=\"run_length_unit\" custom>\n              {['sec', 'min', 'hr'].map(dur=>{\n                return (\n                  <option key={dur}>{dur}</option>\n                )\n              })}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group as={Col} xs={3} >\n            <Form.Control type=\"number\" min=\"0\" step=\"1\" placeholder=\"Enter Number of Runs\"\n              value={fileConfig.number_of_runs}  onChange={handleChange} id=\"number_of_runs\"/>\n            <Form.Text muted>Number of Runs</Form.Text>\n          </Form.Group>\n        </Form.Group>\n      }\n      <Form.Group as={Row} className=\"justify-content-center\">\n        <Col xs={10}>\n          <Alert variant=\"primary\" className=\"text-center\">\n            Files to be Saved to: <b>{fileConfig.directory}</b>\n          </Alert>\n        </Col>\n      </Form.Group>\n      <Row className=\"justify-content-center\">\n          <ButtonGroup>\n            <Button variant=\"danger\" className='ml-1' onClick={closeSession}>Close</Button>\n            <DropdownButton variant=\"secondary\" className='ml-1' as={ButtonGroup}\n              title=\"File\">\n              <Dropdown.Item eventKey=\"1\">Save Configuration</Dropdown.Item>\n              <Dropdown.Item eventKey=\"2\" onClick={loadConfiguration}>Load Configuration</Dropdown.Item>\n              <Dropdown.Item eventKey=\"3\">Load Default</Dropdown.Item>\n              <Dropdown.Item eventKey=\"4\">Set to Default</Dropdown.Item>\n            </DropdownButton>\n            <Button className='ml-1'>Start Acquisition</Button>\n          </ButtonGroup>\n      </Row>\n      </Container>\n    }</div>\n  )\n}\n","import {useState, useEffect} from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Alert from 'react-bootstrap/Alert';\nimport Table from 'react-bootstrap/Table';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\n\nexport default function EditCameras(props){\n\n  const [foundCameras, setFoundCameras] = useState([]);\n  const [isSearching, setSearching] = useState(false);\n\n  const searchCameras = (event) => {\n    setFoundCameras([]);\n    setSearching(true);\n    fetch('/api/devices/cameras')\n      .then(resp => resp.json()\n      .then(data => {\n        // Filter out cameras that are already added\n        let filteredCameras = data\n        Object.values(props.cameras).map(cam=> {\n          console.log(cam);\n        })\n        console.log(filteredCameras);\n        setFoundCameras(filteredCameras);\n        setSearching(false);\n      }))\n  }\n\n  const generateId = (length) => {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  const addCamera = (event, idx) => {\n    event.target.textContent = 'Adding...';\n    event.target.disabled = true;\n    const id = generateId(10);\n    // Send Message to API\n    fetch('/api/settings/'+id, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({...foundCameras[idx],id:id})})\n      .then(resp => resp.json()\n      .then(data => {\n        let oldCameras = [...foundCameras]\n        oldCameras.splice(idx, 1)\n        setFoundCameras(oldCameras);\n        props.setCameras({...props.cameras, [id]:data})\n      })\n      .catch(err=> console.log(err))\n    )\n  }\n\n  const removeCamera = (event, id) => {\n    //Send Message to API\n    fetch('/api/settings/'+id, {\n      method: \"DELETE\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({config:null})})\n    .then(resp => {\n      if (resp.ok) {\n        let newCameras = {...props.cameras};\n        delete newCameras[id];\n        props.setCameras(newCameras)\n      }\n    })\n    .catch(err=> console.log(err))\n  }\n\n  useEffect(()=> {\n    searchCameras(null)\n  },[])\n  const cameraTable = (cameras, text) => {\n    return (\n      <Table className=\"text-center\">\n        <tbody>\n          <tr><th></th><th>Interface</th><th>Index</th><th></th></tr>\n          {\n          cameras.map((cam, idx)=>{\n            const [func, id] = (text === 'Add') ? [addCamera,idx] : [removeCamera,cam.id]\n            if (text === 'Add') {\n              const add = Object.values(props.cameras).map((c)=>{\n                if (c.interface === cam.interface && c.index === cam.index) {\n                    return false\n                } else {\n                  return true\n                }\n              });\n              if (!add.every(v=>v===true)) {return null}\n            }\n            return(\n              <tr key={idx}>\n                <td>\n                  <Button onClick={(e)=>func(e, id)}>{text}</Button>\n                </td>\n                <td>{cam.interface}</td>\n                <td>{cam.index}</td>\n                <td>\n                  <Button variant=\"secondary\">Show Info</Button>\n                </td>\n              </tr>\n            )\n          })\n        }\n        </tbody>\n      </Table>\n    )\n  }\n\n  return(\n    <div>{\n      <Modal show={props.show} onHide={props.hideEditing}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Choosing Cameras\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row className=\"mb-3\">\n              <Col>\n                <Modal.Title>\n                  Available Cameras\n                </Modal.Title>\n              </Col>\n              <Col><Button onClick={searchCameras}>Search</Button></Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n              {\n                isSearching ?\n                <Alert variant='info'>\n                  <Spinner animation=\"border\" size='sm'/>\n                    Searching for Cameras...\n                </Alert> : null\n              }\n              {\n                foundCameras.length > 0 ? cameraTable(foundCameras, 'Add') : null\n              }\n            </Row>\n            <Row className=\"mb-3\">\n              <Col>\n                <Modal.Title>\n                  Current Cameras\n                </Modal.Title>\n              </Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n              {\n                Object.values(props.cameras).length > 0 ?\n                cameraTable(Object.values(props.cameras), 'Remove') :\n                <Alert variant='warning'>No Cameras Added</Alert>\n              }\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    }</div>\n  )\n}\n","import {useRef,useEffect,useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\n\nconst ImageDraw = (props) => {\n\n  const [coor, setCoor] = useState({draw:false,x:0,y:0,ix:0,iy:0});\n  const [cropper, setCropper] = useState({height:null,width:null,objectFit:'cover'})\n\n  const canvasRef = useRef();\n  const imageRef = useRef();\n  const containerRef = useRef();\n\n  const handleUp = (event) => {\n    const { height, naturalHeight } = imageRef.current;\n    const scale = height/naturalHeight;\n    const { x, y, iy, ix } = coor;\n    const { fullHeight, fullWidth } = props.camera.aoi;\n    let aoi;\n    if (event.button === 2) {\n      aoi = { ...props.camera.aoi, height:fullHeight, width:fullWidth, x:0, y:0 }\n    } else {\n      setCropper({...cropper, height:Math.abs(y-iy)+\"px\",width:Math.abs(x-ix)+\"px\"})\n      aoi = {\n        ...props.camera.aoi,\n        height:parseInt(Math.abs(y-iy)/scale),\n        width:parseInt(Math.abs(x-ix)/scale),\n        x:parseInt(Math.min(x, ix)/scale),\n        y:parseInt(Math.min(y, iy)/scale)\n      }\n    }\n    props.setCamera({...props.camera, aoi:aoi})\n    setCoor({draw:false,x:0,y:0,ix:0,iy:0})\n  }\n\n  const handleDown = (event) => {\n    const { left, top} =  canvasRef.current.getBoundingClientRect()\n    const { clientX, clientY } = event;\n    setCoor({ix:clientX-left,iy:clientY-top,x:clientX-left,y:clientY-top,draw:true})\n  }\n\n  const handleMove = (event) => {\n    const { left, top} =  canvasRef.current.getBoundingClientRect()\n    const { clientX, clientY } = event;\n    if (coor.draw) { setCoor({...coor, x:clientX-left,y:clientY-top}) }\n  }\n\n  useEffect(()=>{\n    let canvas = canvasRef.current;\n    let ctx = canvas.getContext('2d');\n    const { height, width } = imageRef.current;\n    canvas.height = height;\n    canvas.width = width;\n    ctx.clearRect(0,0,canvas.width,canvas.height)\n    ctx.strokeStyle = 'red';\n    const { ix, iy, x, y } = coor;\n    if (coor.draw) {ctx.strokeRect(ix,iy,x-ix,y-iy)}\n  })\n\n  useEffect(()=>{\n    const scale = imageRef.current.naturalHeight/imageRef.current.height;\n  },[props.camera.aoi])\n\n  return (\n    <div onMouseDown={handleDown} onMouseMove={handleMove} onMouseUp={handleUp}>\n      <canvas ref={canvasRef} onContextMenu={(e)=>e.preventDefault()} className=\"position-absolute\"\n        style={cropper}/>\n      <Image ref={imageRef} src={\"/api/feed/\"+props.camera.id} fluid draggable={false}\n        style={cropper}/>\n    </div>\n  )\n}\n\nexport default function ConfigureCamera(props) {\n\n  // Store temprary viewing settings\n  const [camera, setCamera] = useState({aoi:{binning:null}});\n\n  const handleSave = () => console.log(camera);\n\n  const handleSwitch = (event) => {\n    if (event.target.id === 'primary'){\n      setCamera({...camera, primary:event.target.checked})\n    } else {\n      var newX; var newY;\n      const {fullWidth, fullHeight, x, y, height, width} = camera.aoi;\n      if( event.target.checked) {\n        newX = (fullWidth-width)/2\n        newY = (fullHeight-height)/2\n      } else { newX=x; newY=y}\n      setCamera({...camera, aoi:{...camera.aoi, centered:event.target.checked, x:newX, y:newY}})\n    }\n  }\n\n  const handleSelect = (event) => {\n    if (event.target.id === 'binning'){\n      setCamera({...camera,aoi:{...camera.aoi, binning:event.target.value}})\n    } else {\n      setCamera({...camera, dtype:event.target.value})\n    }\n  }\n\n  const handleNumber = (event) => {\n    setCamera({...camera, aoi:{...camera.aoi,\n      [event.target.id]:event.target.value\n    }});\n  }\n\n  const calculateFrameSize = () => {return \"4898\"}\n\n  useEffect(() => {\n    setCamera({...props.cameras[props.selected]})\n  },[props.selected])\n\n  return (\n    <div>{\n    <Modal show={props.selected === null ? false : true}\n      onHide={props.onHide} size='xl'>\n      {\n        <div>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Configuring Camera\n          </Modal.Title>\n        </Modal.Header>\n        { !camera.aoi ? null :\n          <Modal.Body>\n            <Row className=\"justify-content-center\"><ImageDraw camera={camera} setCamera={setCamera}/></Row>\n            <Tabs className=\"mt-3\">\n              <Tab eventKey=\"aoiTab\" title=\"AOI\">\n                <Container>\n                  <Row className=\"justify-content-center mt-3 align-items-center\" xs={1} sm={4}>\n                    <InputGroup as={Col}>\n                      <InputGroup.Text>Binning</InputGroup.Text>\n                      <FormControl as=\"select\" custom className=\"text-center\"\n                        value={camera.aoi.binning} onChange={handleSelect} id=\"binning\">\n                        {\n                          ['1x1','2x2','4x4','8x8'].map(bin=><option key={bin}>{bin}</option>)\n                        }\n                      </FormControl>\n                    </InputGroup>\n                    <Col className=\"text-center\">\n                      <Form.Check type=\"switch\" id=\"centered\" label=\"Centered\"\n                        value={camera.aoi.centered} onChange={handleSwitch}>\n                      </Form.Check>\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-center mt-3\" xs={2} sm={6}>\n                    {\n                      [\"height\", \"width\", \"x\", \"y\"].map(setting => {\n                        return (\n                          <Form.Group as={Col} key={setting}>\n                            <Form.Control type=\"number\" min=\"0\" step=\"1\" className=\"text-center\"\n                              value={camera.aoi[setting]} id={setting} onChange={handleNumber}/>\n                            <Form.Text muted>\n                              {setting.charAt(0).toUpperCase()+setting.slice(1)}\n                            </Form.Text>\n                          </Form.Group>\n                        )\n                      })\n                    }\n                  </Row>\n                </Container>\n              </Tab>\n              <Tab eventKey=\"framerateKey\" title=\"Framerate\">\n                <Container className=\"mt-3\">\n                  <Row className=\"align-items-center\">\n                    <Col className=\"text-center\">\n                      <Form.Check type=\"switch\" label=\"Primary\" value={camera.primary}\n                        onChange={handleSwitch} id=\"primary\"></Form.Check>\n                    </Col>\n                    <Col className=\"justify-content-center\">\n                      <Form.Control type=\"number\" min=\"0\" step=\"0.01\"\n                        value={camera.framerate} disabled={camera.primary?false:true}\n                        onChange={handleNumber}>\n                      </Form.Control>\n                      <Form.Text muted>Framerate</Form.Text>\n                    </Col>\n                  </Row>\n                </Container>\n              </Tab>\n              <Tab eventKey=\"pixelKey\" title=\"Pixel Format\">\n                <Container>\n                  <Form.Group as={Row} className=\"mt-3\">\n                    <Form.Group as={Col}>\n                      <Form.Control as=\"select\" custom value={camera.dtype}\n                        onChange={handleSelect}>\n                        {['8-bit','12-bit','16-bit','32-bit'].map(bit=>{\n                          return(<option key={bit}>{bit}</option>)\n                        })}\n                      </Form.Control>\n                      <Form.Text muted>Bits Per Pixel</Form.Text>\n                    </Form.Group>\n                    <Form.Group as={Col}>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>{calculateFrameSize()}</InputGroup.Text>\n                        <InputGroup.Text>MB</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Text muted>MB per Frame</Form.Text>\n                    </Form.Group>\n                  </Form.Group>\n                </Container>\n              </Tab>\n            </Tabs>\n          </Modal.Body>\n        }\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={props.onHide}>Close</Button>\n          <Button onClick={handleSave}>Save Changes</Button>\n        </Modal.Footer>\n      </div>}\n    </Modal>\n    }</div>\n  )\n}\n","import {useState,useEffect} from 'react';\n\nimport EditCameras from './Edit';\nimport ConfigureCamera from './Configure';\n\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Overlay from 'react-bootstrap/Overlay';\n\nexport default function Cameras(props){\n\n  // State for storing camera configuration\n  const [cameras, setCameras] = useState({});\n\n  // Viewing states\n  const [editing, showEditing] = useState(false);\n  const [selectedCamera, setSelectedCamera] = useState(null);\n\n  useEffect(() => {\n    fetch('/api/settings/cameras')\n      .then(resp => resp.json()\n      .then(data => setCameras(data)))\n      .catch(err => console.log(err))\n  },[])\n\n  return (\n    <div className=\"mt-3\">\n    {<Container className=\"text-center h-100\">\n        <Row className=\"align-items-center\">\n          {Object.keys(cameras).map((key, idx) => {\n            const cam = cameras[key]\n            return (\n              <Col key={idx}>\n                <Image src={\"api/feed/\"+cam.id} fluid style={{cursor:'pointer'}}\n                  onClick={()=>setSelectedCamera(cam.id)} alt={cam.id}/>\n              </Col>\n            )\n          })}\n        </Row>\n        <Row className=\"mt-3\"><Col>\n          <Button onClick={()=>showEditing(true)}>\n            {cameras.length === 0 ? \"Add Camera(s)\" : \"Edit Camera(s)\"}\n          </Button>\n        </Col></Row>\n      <EditCameras cameras={cameras} setCameras={setCameras}\n        hideEditing={()=>showEditing(false)} show={editing}/>\n      <ConfigureCamera cameras={cameras} setCameras={setCameras} selected={selectedCamera}\n        onHide={()=>setSelectedCamera(null)}/>\n    </Container>}\n    </div>\n  )\n}\n","import {useState} from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst StrobingTab = (props) => {\n\n  const addLed = (event) => {\n    props.setConfig(\n      {...props.config,\n        leds:[...props.config.leds, {'name':'New Lew','pin':0}]\n      }\n    )\n  }\n\n  const handleLed = (idx, value, type) => {\n    let newLeds = [...props.leds];\n    newLeds[idx][type] = value;\n    props.setConfig({...props.config, leds:newLeds});\n  }\n\n  const handleTrig = (value) => props.setConfig({...props.config, trig:value});\n\n  return (\n    <Form>\n\n      <Container>\n        <Row></Row>\n        <Row>\n          <Col></Col>\n          <Col>\n            <Form.Control type=\"number\" min=\"0\" step=\"1\" placeholder=\"Trigger Pin\"\n              onChange={(e)=>handleTrig(e.target.value)}/>\n            <Form.Text className=\"text-muted\">\n              Set the Trigger Pin\n            </Form.Text>\n          </Col>\n          <Col></Col>\n        </Row>\n\n      {props.config.leds.map((led, idx)=>{\n        return(\n          <Row key={idx}>\n            <Col>\n              <Form.Control type=\"text\" placeholder=\"LED Name\"\n                onChange={(e)=>handleLed(idx, e.target.value, 'name')}/>\n            </Col>\n            <Col>\n              <Form.Control type=\"number\" min=\"0\" step=\"1\" placeholder=\"LED Pin\"\n                onChange={(e)=>handleLed(idx, e.target.value, 'pin')}/>\n            </Col>\n            <Col>\n              <Button variant='secondary'>Remove</Button>\n            </Col>\n            <Col>\n              <Button variant='primary'>Test</Button>\n            </Col>\n          </Row>\n        )\n      })}\n\n        <Row>\n          <Col></Col><Col><Button onClick={addLed}>Add LED</Button></Col><Col></Col>\n        </Row>\n        <Form.Text className=\"text-muted\">\n          Configure LEDs\n        </Form.Text>\n      </Container>\n\n    </Form>\n  )\n}\n\nconst StimTab = (props) => {\n\n  // TODO: Test Stim\n  // TODO: Format Stim\n  // TODO: Remove Stim\n\n  const addStim = (event) => {\n    props.setConfig(\n      {\n        ...props.config,\n        stim:[...props.config.stim, {'name':'','type':'2PinStepper','pins':[\"0\",\"1\"]}]\n      }\n    )\n  }\n\n  const removeStim = (idx) => {\n    let newStim = [...props.config.stim]\n    newStim.splice(idx,1)\n    props.setConfig({...props.config,stim:newStim})\n  }\n\n  const handleStim = (idx, event, type) => {\n    let newStim = [...props.config.stim]\n    if (type === 'type' && event.target.value !== props.stim[idx].type){\n      if (event.target.value==='4PinStepper') {\n          newStim[idx].pins.push('0','1');\n      } else {\n        newStim[idx].pins.splice(-2,2);\n      }\n    }\n    newStim[idx][type] = event.target.value;\n    props.setConfig({...props.config, stim:newStim})\n  }\n\n  const handlePin = (event, idx, pidx) => {\n    let newStim = [...props.config.stim]\n    newStim[idx].pins[pidx] = event.target.value\n    props.setConfig({...props.config, stim:newStim})\n\n  }\n\n  return (\n    <Form>\n\n      <Form.Group as={Row}></Form.Group>\n\n      <Form.Group controlId=\"stims\">\n        {props.config.stim.map((stim, idx)=>{\n          return(\n            <Container>\n              <Row key={idx}>\n                <Col>\n                  <Form.Control type=\"text\" placeholder=\"Stim Name\"\n                    onChange={(e)=>handleStim(idx,e,'name')}/>\n                </Col>\n                <Col>\n                  <Form.Control onChange={(e)=>handleStim(idx,e,'type')} as=\"select\">\n                    <option>2PinStepper</option>\n                    <option>4PinStepper</option>\n                  </Form.Control>\n                </Col>\n                <Col>\n                  <Button variant='secondary' onClick={()=>removeStim(idx)}>Remove</Button>\n                </Col>\n                <Col>\n                  <Button variant='primary'>Test</Button>\n                </Col>\n              </Row>\n              {stim.pins.map((pin, pidx) => {\n                return (\n                  <Row>\n                    <Form.Control type=\"number\" min=\"0\" step=\"1\" placeholder=\"Pin\"\n                      onChange={(e)=> handlePin(e,idx,pidx)}/>\n                  </Row>\n                )\n              })}\n            </Container>\n          )\n        })}\n        </Form.Group>\n\n        <Form.Group>\n        <Row>\n          <Col></Col><Col><Button onClick={addStim}>Add Stim</Button></Col><Col></Col>\n        </Row>\n        <Row>\n          <Col>\n            <Form.Text className=\"text-muted\">\n              Configure Stim\n            </Form.Text>\n          </Col>\n        </Row>\n        </Form.Group>\n\n    </Form>\n  )\n}\n\nconst DaqTab = (props) => {\n\n  // TODO: Test DAQ\n  // TODO: Remove DAQ\n\n  const addDaq = (event) => props.setConfig({...props.config, daq:[{'name':'New DAQ','pin':0}]})\n\n  const removeDaq = (idx) => {\n    let newDaq = props.config.daq\n    newDaq.splice(idx,1)\n    props.setConfig({...props.config,daq:newDaq})\n  }\n\n  return (\n    <Form>\n\n      <Form.Group as={Row}></Form.Group>\n\n      <Form.Group controlId=\"stims\">\n        {props.config.daq.map((daq, idx)=>{\n          return(\n            <Row key={idx}>\n              <Col>\n                <Form.Control type=\"text\" placeholder=\"DAQ Name\"/>\n              </Col>\n              <Col>\n                <Form.Control type=\"number\" min=\"0\" step=\"1\" placeholder=\"DAQ Pin\"/>\n              </Col>\n              <Col>\n                <Button onClick={(e)=>removeDaq(idx)} variant='secondary'>Remove</Button>\n              </Col>\n              <Col>\n                <Button variant='primary'>Test</Button>\n              </Col>\n            </Row>\n          )\n        })}\n      </Form.Group>\n\n      <Form.Group>\n        <Row>\n          <Col><Button onClick={addDaq}>Add DAQ</Button></Col>\n        </Row>\n        <Row>\n          <Col>\n            <Form.Text className=\"text-muted\">\n              Configure Data Acquisition\n            </Form.Text>\n          </Col>\n        </Row>\n      </Form.Group>\n\n    </Form>\n  )\n}\n\nexport default function Configuration(props) {\n\n  // State variables\n  const [sending, setSending] = useState(false);\n  const [config, setConfig] = useState({\n    \"device\":\"arduino\", leds:[],daq:[],port:null,trig:null,stim:[]\n  });\n\n  // Send settings to Python\n  const handleSave = () => {\n    // TODO: Send values to Python API\n    fetch('/api/connection/', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(config)\n    })\n    .then(resp => resp.json()\n      .then(data => console.log(data))\n      .catch(err => console.log(err))\n    )\n    props.handleConfig();\n  };\n\n  return(\n    <Modal show={props.show} onHide={props.handleConfig}>\n      <Modal.Header closeButton>\n        <Modal.Title>Arduino Configuration</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n\n        <Tabs>\n          <Tab eventKey='strobingTab' title=\"Strobing\">\n            <StrobingTab config={config} setConfig={setConfig}/>\n          </Tab>\n          <Tab eventKey='stimTab' title=\"Stim\">\n            <StimTab config={config} setConfig={setConfig}/>\n          </Tab>\n          <Tab eventKey='daqTab' title=\"Data Acquisition\">\n            <DaqTab config={config} setConfig={setConfig}/>\n          </Tab>\n        </Tabs>\n\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={props.handleConfig}>\n          Close\n        </Button>\n        { !sending ?\n          <Button variant=\"primary\" onClick={handleSave}>\n            Save Changes\n          </Button>\n          :\n          <Button variant=\"primary\" disabled>\n            <Spinner as=\"span\" size=\"sm\" animation=\"border\" role=\"status\"/>\n            Sending to Arduino\n          </Button>\n        }\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","// React Components\nimport {useState,useEffect, useRef} from 'react';\n\n// Load Components\nimport Configuration from './Configuration';\n\n// Bootstrap Components\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default function Arduino(props){\n\n  // UI State Variables\n  const [config, setConfig] = useState({})\n  const [availablePorts, setAvailablePorts] = useState([]);\n  const [selectedPort, setSelectedPort] = useState(0);\n  const [statusMessage, setStatusMessage] = useState(null);\n\n  // Modal View Controllers\n  const [configWindow, showConfigWindow] = useState(false);\n  const [info, showInfo] = useState(false);\n\n  // Close and open Configuration Window\n  const handleConfig = () => showConfigWindow(!configWindow);\n\n  const handleInfo = () => showInfo(!info);\n\n  const listPorts = () => {\n    setAvailablePorts([]);\n    fetch('/api/devices/arduinos')\n      .then(resp=> resp.json()\n      .then(data => {\n        if (data.length === 0) {\n          setStatusMessage(<Alert variant='danger'>No Arduinos Found</Alert>)\n        } else {\n          setStatusMessage(null);\n          setAvailablePorts(data)\n        }\n      }))\n  }\n\n  const connectPort = () => {\n\n    const port = availablePorts[selectedPort];\n\n    setStatusMessage(\n      <Alert variant='warning'>\n        <Spinner animation='border' className='mr-3' size='sm'></Spinner>\n        Connecting to <b>{port.device}</b>...\n      </Alert>\n    )\n\n    const arduinoSettings = {key:'arduino',config:{port:port.device}, command:'open'}\n\n    fetch('/api/settings/arduino', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(arduinoSettings)})\n      .then(resp => resp.json()\n      .then(data => {\n\n        if (!data.firmware_version) {\n\n          setStatusMessage((\n            <Alert variant='danger'>\n              <p>\n                <b>ERROR:</b> Arduino at <b>{port.device}</b> does not have\n                compatible firmware.\n                <Button className='ml-3'>Upload Firmware...</Button>\n              </p>\n            </Alert>\n          ))\n\n        }\n\n        else {\n\n          setConfig(data);\n          setStatusMessage((\n            <Alert variant='success'>\n              <p>\n                Successfully connected to the Arduino at <b>{port.device}</b>\n              </p>\n            </Alert>\n          ))\n        }\n      }))\n    }\n\n  useEffect(() => {\n    if (availablePorts.length === 0) {}\n    else { connectPort() }\n  },[availablePorts, selectedPort])\n\n  useEffect(() => {\n    listPorts();\n  },[])\n\n  return(\n    <Container>\n      {\n        <Row className=\"mt-3 justify-content-center\">\n          <Form.Group as={Col} sm={3}>\n            <Form.Control as=\"select\" custom>\n              { availablePorts.length === 0 ?\n                <option disabled defaultValue>No Arduinos Found.</option> :\n                availablePorts.map((port, idx) => {\n                  return(\n                    <option onClick={()=>setSelectedPort(idx)} key={idx}>\n                      {port.product} - {port.device}\n                    </option>\n                  )\n                })\n              }\n            </Form.Control>\n            <Form.Text muted>Select an Arduino</Form.Text>\n          </Form.Group>\n          <Form.Group as={Col} sm={4}>\n            <ButtonGroup>\n              <Button variant=\"secondary\" onClick={()=>listPorts()}>Refresh</Button>\n              <Button variant=\"secondary\" onClick={handleInfo}\n                disabled={availablePorts.length === 0 ? true : false}>\n                { info ? \"Hide Info\" : \"Show Info\" }\n              </Button>\n              <Button variant=\"primary\" disabled={config.firmware_version? false:true }\n                onClick={handleConfig}>Configure</Button>\n            </ButtonGroup>\n          </Form.Group>\n        </Row>\n      }\n        <Configuration port={availablePorts[selectedPort]} show={configWindow} handleConfig={handleConfig}/>\n        { statusMessage }\n        { info ?\n            <Table>\n              <tbody>\n              {Object.keys(availablePorts[selectedPort]).map((key,index)=>{\n                return (\n                  <tr key={index}>\n                    <th>{key.charAt(0).toUpperCase()+key.slice(1)}</th>\n                    <td>{availablePorts[selectedPort][key]}</td>\n                  </tr>\n                )\n              })}\n              </tbody>\n            </Table>\n          : null\n        }\n      </Container>\n  )\n}\n","import { useState, useEffect } from 'react';\n\n// Bootstrap Component\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Modal from 'react-bootstrap/Modal';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\n// Each Tab's Components\nimport File from './tabs/File/Main';\nimport Cameras from './tabs/Cameras/Main';\nimport Arduino from './tabs/Arduino/Main';\nimport Login from './Login';\n\nconst StatusPage = (props) => {\n\n  return (\n    <div>{\n      <Modal className='h-100' show={props.message ? true : false}>\n          <Alert variant={props.variant}>\n            <Alert.Heading>\n              {props.variant === 'danger' ? \"ERROR:\" :\n                <div><Spinner animation=\"grow\"></Spinner> Loading pyWFOM</div>\n              }\n            </Alert.Heading>\n            <p>{props.message}</p>\n              {\n                props.variant !== 'danger'? null :\n                <Button onClick={()=>window.location.reload()}>Refresh</Button>\n              }\n          </Alert>\n      </Modal>\n      }</div>\n  )\n}\n\nexport default function Main() {\n\n  const [loading, setLoading] = useState({});\n  const [settings, setSettings] = useState({})\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  return (\n    <div>\n      {\n        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey='runTab' title=\"Run\">\n            <File />\n          </Tab>\n          <Tab eventKey='camerasTab' title=\"Cameras\">\n            <Cameras />\n          </Tab>\n          <Tab eventKey='arduinoTab' title=\"Arduino\">\n            <Arduino />\n          </Tab>\n        </Tabs>\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}